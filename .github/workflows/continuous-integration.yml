name: "Continuous Integration"

on:
  push:
    paths-ignore:
      - 'doc/**'
      - '.github/**'
  pull_request:
    paths-ignore:
      - 'doc/**'
      - '.github/**'

jobs:
  phpunit:
    name: PHP ${{ matrix.php-version }} (${{ matrix.dependency-version }})

    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}

    strategy:
      fail-fast: false
      matrix:
        php-version:
          - '8.1'
          - '8.2'
          - '8.3'
        dependency-version: [prefer-lowest, prefer-stable]
        experimental: [false]
        include:
          - php-version: '8.4'
            dependency-version: prefer-lowest
            experimental: true
          - php-version: '8.4'
            dependency-version: prefer-stable
            experimental: true

    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

    - name: Setup PHP with PECL extension
      uses: shivammathur/setup-php@6d7209f44a25a59e904b1ee9f3b0c33ab2cd888d # v2.29.0
      with:
        php-version: ${{ matrix.php-version }}
        tools: composer:v2
        coverage: pcov

    - name: Validate composer.json and composer.lock
      run: composer validate

    - name: Get composer cache directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Cache Composer packages
      uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-php-${{ matrix.php-version }}-composer-${{ matrix.prefer }}-${{ hashFiles('**/composer.json') }}
        restore-keys: ${{ runner.os }}-php-${{ matrix.php-version }}-composer-${{ matrix.prefer }}

    - name: Install dependencies (PHP 8)
      if: steps.composer-cache.outputs.cache-hit != 'true' && matrix.php-version >= 8
      run: composer update --${{ matrix.dependency-version }} --ignore-platform-req=php --no-progress --no-interaction

    - name: Pull the docker image used by the tests.
      run: docker pull busybox:latest

    - name: Run PHPUnit test suite
      run: composer run-script test-ci

    - name: Publish code coverage
      uses: paambaati/codeclimate-action@a1831d7162ea1fbc612ffe5fb3b90278b7999d59 # v5.0.0
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
      with:
        coverageCommand: composer run-script test-coverage
        coverageLocations: |
          ${{github.workspace}}/clover.xml:clover
      if: github.event_name != 'pull_request'
